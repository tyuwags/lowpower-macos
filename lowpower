#!/bin/bash

help() {
  cat<<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [on | off | all | status]

Script made to turn on or off enegy saver.

Available options:

-h, --help        Print this help and exit
status            Print the status of the energy saver on battery and on AC power.
on                Turn on energy saver for battery.
off               Turn off energy saver for battery and AC power.
all               Turn on energy saver for battery and AC power.

Must be run as root except for help and status.
      
EOF
}


get_status() {
  # Get the lowpowermode value for battery power
  local battery_lowpowermode=$(pmset -g custom | grep -A 15 "Battery Power" | grep "lowpowermode" | awk '{print $2}')

  # Get the lowpowermode value for AC power
  local ac_lowpowermode=$(pmset -g custom | grep -A 15 "AC Power" | grep "lowpowermode" | awk '{print $2}')

  # Display different messages based on the values
  echo "Battery Power - lowpowermode: $battery_lowpowermode"
  if [ "$battery_lowpowermode" -eq 1 ]; then
    echo "Low Power Mode is enabled for battery power."
  else
    echo "Low Power Mode is disabled for battery power."
  fi

  echo "AC Power - lowpowermode: $ac_lowpowermode"
  if [ "$ac_lowpowermode" -eq 1 ]; then
    echo "Low Power Mode is enabled for AC power."
  else
    echo "Low Power Mode is disabled for AC power."
  fi
}

check_status() {
  if [ $(id -u) -ne 0 ]; then 
    echo Please run this script as root or using sudo!
    exit 1
  fi
}

if [ $# -eq 0 ]; then
    echo "No arguments supplied."
    exit 1
fi

while [ $# -gt 0 ]; do
    case $1 in
        on)
          check_status
          pmset -a lowpowermode 0
          pmset -b lowpowermode 1
          echo "Low power mode turned on for battery."
          exit 0;;
        off)
          check_status
          pmset -a lowpowermode 0
          echo "Low power mode turned off."
          exit 0;;
        all)
          check_status
          pmset -a lowpowermode 1
          echo "Low power mode turned on for battery and AC power."
          exit 0;;
        status)
          get_status
          exit 0;;
        -h | --help)
          help
          exit 0
          ;;
        *)
        echo "Unknown option : $1." >&2
      
        exit 1;;
    esac
done 